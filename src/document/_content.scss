// Stencila Document content
//
// These styles are apply to the `#data .content` elem of the document's "plain" HTML
// and to the `div[data-id=content]` elem that is generated by the `VisualEditor`.
// Selectors often have two rows reflecting each of these applications.

// Import rendered math styling
@import '../utilities/math/index';

// Style when "plain" HTML
#data .content {
  // Do a reset so that elements have the same styles in "plain" HTML and 
  // in the editor (defined below) e.g. `p` and `div.sc-paragraph` look the same. 
  // Some of these resets interfere with ACE Editor (and potentially other components) 
  // so don't apply editor element.
  @extend %reset;
}

// Style shared between "plain" HTML and `VisualEditor`
#data .content,
.sc-visual-editor [data-id='content'],
.sc-code-editor [data-id='content'] {

  font-family: $sans-font-family;
  line-height: 1.5em;
  text-align: justify;
  color: #333;
  outline: none;
}

// Elements for which there is a style in `nodes` folder.
// In order of usual appearance.
// Imported within content for specificity.
// Directly under `.sc-visual-editor` (not additional `content`) so that `&.sm-reveal
// can be used.
#data .content,
.sc-visual-editor,
.sc-code-editor {

  @import 'nodes/title/title';
  @import 'nodes/summary/summary';
  @import 'nodes/heading/heading';
  @import 'nodes/paragraph/paragraph';

  @import 'nodes/emphasis/emphasis';
  @import 'nodes/strong/strong';
  @import 'nodes/subscript/subscript';
  @import 'nodes/superscript/superscript';
  @import 'nodes/link/link';
  @import 'nodes/code/code';
  @import 'nodes/math/math';
  @import 'nodes/emoji/emoji';

  @import 'nodes/list/list';
  @import 'nodes/table/table';
  @import 'nodes/image/image';
  @import 'nodes/blockquote/blockquote';
  @import 'nodes/codeblock/codeblock';

  @import 'nodes/input/input';
  @import 'nodes/print/print';

  @import 'nodes/mark/mark';
  @import 'nodes/discussion/discussion';
  @import 'nodes/comment/comment';

  @import 'nodes/default/default';
}

// Specific styling for content when in the `VisualEditor`
.sc-visual-editor {

  // No outline on editable nodes
  [contenteditable='true'] {
    outline: none;
  }

  .sc-isolated-node.sm-default-style.sm-selected > .se-container,
  .sc-isolated-node.sm-default-style.sm-co-selected > .se-container {
    @extend %stencila-selected;
  }
}

// Specific styling for content when in the `CodeEditor`
.sc-code-editor [data-id='content'] {
  background: #292929;
  padding: .75em;

  font-family: $mono-font-family;
  line-height: 1.5em;
  text-align: left;
  color: #ddd;
}

